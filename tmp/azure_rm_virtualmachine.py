
from ansible_collections.azure.azcollection.plugins.module_utils.azure_rm_common_ext import AzureRMModuleBaseExt
try:
    from msrestazure.azure_exceptions import CloudError
    from azure.mgmt.compute import ComputeManagementClient
    from msrestazure.azure_operation import AzureOperationPoller
    from msrest.polling import LROPoller
except ImportError:
    # This is handled in azure_rm_common
    pass


class Actions:
    NoAction, Create, Update, Delete = range(4)


class AzureRMVirtualMachine(AzureRMModuleBaseExt):
    def __init__(self):
        self.module_arg_spec = dict(
            resource_group=dict(
                type='str',
                required=True
            ),
            vm_name=dict(
                type='str',
                required=True
            ),
            plan=dict(
                type='dict',
                disposition='/plan',
                options=dict(
                    name=dict(
                        type='str',
                        disposition='name'
                    ),
                    publisher=dict(
                        type='str',
                        disposition='publisher'
                    ),
                    product=dict(
                        type='str',
                        disposition='product'
                    ),
                    promotion_code=dict(
                        type='str',
                        disposition='promotion_code'
                    )
                )
            ),
            resources=dict(
                type='list',
                updatable=False,
                disposition='/resources',
                elements='dict',
                options=dict(
                    force_update_tag=dict(
                        type='str',
                        disposition='force_update_tag'
                    ),
                    publisher=dict(
                        type='str',
                        disposition='publisher'
                    ),
                    type_properties_type=dict(
                        type='str',
                        disposition='type_properties_type'
                    ),
                    type_handler_version=dict(
                        type='str',
                        disposition='type_handler_version'
                    ),
                    auto_upgrade_minor_version=dict(
                        type='bool',
                        disposition='auto_upgrade_minor_version'
                    ),
                    enable_automatic_upgrade=dict(
                        type='bool',
                        disposition='enable_automatic_upgrade'
                    ),
                    settings=dict(
                        type='any',
                        disposition='settings'
                    ),
                    protected_settings=dict(
                        type='any',
                        disposition='protected_settings'
                    ),
                    instance_view=dict(
                        type='dict',
                        disposition='instance_view',
                        options=dict(
                            name=dict(
                                type='str',
                                disposition='name'
                            ),
                            type=dict(
                                type='str',
                                disposition='type'
                            ),
                            type_handler_version=dict(
                                type='str',
                                disposition='type_handler_version'
                            ),
                            substatuses=dict(
                                type='list',
                                disposition='substatuses',
                                elements='dict',
                                options=dict(
                                    code=dict(
                                        type='str',
                                        disposition='code'
                                    ),
                                    level=dict(
                                        type='sealed-choice',
                                        disposition='level'
                                    ),
                                    display_status=dict(
                                        type='str',
                                        disposition='display_status'
                                    ),
                                    message=dict(
                                        type='str',
                                        disposition='message'
                                    ),
                                    time=dict(
                                        type='str',
                                        disposition='time'
                                    )
                                )
                            ),
                            statuses=dict(
                                type='list',
                                disposition='statuses',
                                elements='dict',
                                options=dict(
                                    code=dict(
                                        type='str',
                                        disposition='code'
                                    ),
                                    level=dict(
                                        type='sealed-choice',
                                        disposition='level'
                                    ),
                                    display_status=dict(
                                        type='str',
                                        disposition='display_status'
                                    ),
                                    message=dict(
                                        type='str',
                                        disposition='message'
                                    ),
                                    time=dict(
                                        type='str',
                                        disposition='time'
                                    )
                                )
                            )
                        )
                    )
                )
            ),
            identity=dict(
                type='dict',
                disposition='/identity',
                options=dict(
                    type=dict(
                        type='sealed-choice',
                        disposition='type'
                    ),
                    user_assigned_identities=dict(
                        type='dict',
                        disposition='user_assigned_identities'
                    )
                )
            ),
            zones=dict(
                type='list',
                disposition='/zones',
                elements='str'
            ),
            hardware_profile=dict(
                type='dict',
                disposition='/hardware_profile',
                options=dict(
                    vm_size=dict(
                        type='str',
                        disposition='vm_size',
                        choices=['Basic_A0',
                                 'Basic_A1',
                                 'Basic_A2',
                                 'Basic_A3',
                                 'Basic_A4',
                                 'Standard_A0',
                                 'Standard_A1',
                                 'Standard_A2',
                                 'Standard_A3',
                                 'Standard_A4',
                                 'Standard_A5',
                                 'Standard_A6',
                                 'Standard_A7',
                                 'Standard_A8',
                                 'Standard_A9',
                                 'Standard_A10',
                                 'Standard_A11',
                                 'Standard_A1_v2',
                                 'Standard_A2_v2',
                                 'Standard_A4_v2',
                                 'Standard_A8_v2',
                                 'Standard_A2m_v2',
                                 'Standard_A4m_v2',
                                 'Standard_A8m_v2',
                                 'Standard_B1s',
                                 'Standard_B1ms',
                                 'Standard_B2s',
                                 'Standard_B2ms',
                                 'Standard_B4ms',
                                 'Standard_B8ms',
                                 'Standard_D1',
                                 'Standard_D2',
                                 'Standard_D3',
                                 'Standard_D4',
                                 'Standard_D11',
                                 'Standard_D12',
                                 'Standard_D13',
                                 'Standard_D14',
                                 'Standard_D1_v2',
                                 'Standard_D2_v2',
                                 'Standard_D3_v2',
                                 'Standard_D4_v2',
                                 'Standard_D5_v2',
                                 'Standard_D2_v3',
                                 'Standard_D4_v3',
                                 'Standard_D8_v3',
                                 'Standard_D16_v3',
                                 'Standard_D32_v3',
                                 'Standard_D64_v3',
                                 'Standard_D2s_v3',
                                 'Standard_D4s_v3',
                                 'Standard_D8s_v3',
                                 'Standard_D16s_v3',
                                 'Standard_D32s_v3',
                                 'Standard_D64s_v3',
                                 'Standard_D11_v2',
                                 'Standard_D12_v2',
                                 'Standard_D13_v2',
                                 'Standard_D14_v2',
                                 'Standard_D15_v2',
                                 'Standard_DS1',
                                 'Standard_DS2',
                                 'Standard_DS3',
                                 'Standard_DS4',
                                 'Standard_DS11',
                                 'Standard_DS12',
                                 'Standard_DS13',
                                 'Standard_DS14',
                                 'Standard_DS1_v2',
                                 'Standard_DS2_v2',
                                 'Standard_DS3_v2',
                                 'Standard_DS4_v2',
                                 'Standard_DS5_v2',
                                 'Standard_DS11_v2',
                                 'Standard_DS12_v2',
                                 'Standard_DS13_v2',
                                 'Standard_DS14_v2',
                                 'Standard_DS15_v2',
                                 'Standard_DS13-4_v2',
                                 'Standard_DS13-2_v2',
                                 'Standard_DS14-8_v2',
                                 'Standard_DS14-4_v2',
                                 'Standard_E2_v3',
                                 'Standard_E4_v3',
                                 'Standard_E8_v3',
                                 'Standard_E16_v3',
                                 'Standard_E32_v3',
                                 'Standard_E64_v3',
                                 'Standard_E2s_v3',
                                 'Standard_E4s_v3',
                                 'Standard_E8s_v3',
                                 'Standard_E16s_v3',
                                 'Standard_E32s_v3',
                                 'Standard_E64s_v3',
                                 'Standard_E32-16_v3',
                                 'Standard_E32-8s_v3',
                                 'Standard_E64-32s_v3',
                                 'Standard_E64-16s_v3',
                                 'Standard_F1',
                                 'Standard_F2',
                                 'Standard_F4',
                                 'Standard_F8',
                                 'Standard_F16',
                                 'Standard_F1s',
                                 'Standard_F2s',
                                 'Standard_F4s',
                                 'Standard_F8s',
                                 'Standard_F16s',
                                 'Standard_F2s_v2',
                                 'Standard_F4s_v2',
                                 'Standard_F8s_v2',
                                 'Standard_F16s_v2',
                                 'Standard_F32s_v2',
                                 'Standard_F64s_v2',
                                 'Standard_F72s_v2',
                                 'Standard_G1',
                                 'Standard_G2',
                                 'Standard_G3',
                                 'Standard_G4',
                                 'Standard_G5',
                                 'Standard_GS1',
                                 'Standard_GS2',
                                 'Standard_GS3',
                                 'Standard_GS4',
                                 'Standard_GS5',
                                 'Standard_GS4-8',
                                 'Standard_GS4-4',
                                 'Standard_GS5-16',
                                 'Standard_GS5-8',
                                 'Standard_H8',
                                 'Standard_H16',
                                 'Standard_H8m',
                                 'Standard_H16m',
                                 'Standard_H16r',
                                 'Standard_H16mr',
                                 'Standard_L4s',
                                 'Standard_L8s',
                                 'Standard_L16s',
                                 'Standard_L32s',
                                 'Standard_M64s',
                                 'Standard_M64ms',
                                 'Standard_M128s',
                                 'Standard_M128ms',
                                 'Standard_M64-32ms',
                                 'Standard_M64-16ms',
                                 'Standard_M128-64ms',
                                 'Standard_M128-32ms',
                                 'Standard_NC6',
                                 'Standard_NC12',
                                 'Standard_NC24',
                                 'Standard_NC24r',
                                 'Standard_NC6s_v2',
                                 'Standard_NC12s_v2',
                                 'Standard_NC24s_v2',
                                 'Standard_NC24rs_v2',
                                 'Standard_NC6s_v3',
                                 'Standard_NC12s_v3',
                                 'Standard_NC24s_v3',
                                 'Standard_NC24rs_v3',
                                 'Standard_ND6s',
                                 'Standard_ND12s',
                                 'Standard_ND24s',
                                 'Standard_ND24rs',
                                 'Standard_NV6',
                                 'Standard_NV12',
                                 'Standard_NV24']
                    )
                )
            ),
            storage_profile=dict(
                type='dict',
                disposition='/storage_profile',
                options=dict(
                    image_reference=dict(
                        type='dict',
                        disposition='image_reference',
                        options=dict(
                            publisher=dict(
                                type='str',
                                disposition='publisher'
                            ),
                            offer=dict(
                                type='str',
                                disposition='offer'
                            ),
                            sku=dict(
                                type='str',
                                disposition='sku'
                            ),
                            version=dict(
                                type='str',
                                disposition='version'
                            )
                        )
                    ),
                    os_disk=dict(
                        type='dict',
                        disposition='os_disk',
                        options=dict(
                            os_type=dict(
                                type='sealed-choice',
                                disposition='os_type'
                            ),
                            encryption_settings=dict(
                                type='dict',
                                disposition='encryption_settings',
                                options=dict(
                                    disk_encryption_key=dict(
                                        type='dict',
                                        disposition='disk_encryption_key',
                                        options=dict(
                                            secret_url=dict(
                                                type='str',
                                                disposition='secret_url',
                                                required=True
                                            ),
                                            source_vault=dict(
                                                type='dict',
                                                disposition='source_vault',
                                                required=True,
                                                options=dict(
                                                    id=dict(
                                                        type='str',
                                                        disposition='id'
                                                    )
                                                )
                                            )
                                        )
                                    ),
                                    key_encryption_key=dict(
                                        type='dict',
                                        disposition='key_encryption_key',
                                        options=dict(
                                            key_url=dict(
                                                type='str',
                                                disposition='key_url',
                                                required=True
                                            ),
                                            source_vault=dict(
                                                type='dict',
                                                disposition='source_vault',
                                                required=True,
                                                options=dict(
                                                    id=dict(
                                                        type='str',
                                                        disposition='id'
                                                    )
                                                )
                                            )
                                        )
                                    ),
                                    enabled=dict(
                                        type='bool',
                                        disposition='enabled'
                                    )
                                )
                            ),
                            name=dict(
                                type='str',
                                disposition='name'
                            ),
                            vhd=dict(
                                type='dict',
                                disposition='vhd',
                                options=dict(
                                    uri=dict(
                                        type='str',
                                        disposition='uri'
                                    )
                                )
                            ),
                            image=dict(
                                type='dict',
                                disposition='image',
                                options=dict(
                                    uri=dict(
                                        type='str',
                                        disposition='uri'
                                    )
                                )
                            ),
                            caching=dict(
                                type='sealed-choice',
                                disposition='caching'
                            ),
                            write_accelerator_enabled=dict(
                                type='bool',
                                disposition='write_accelerator_enabled'
                            ),
                            diff_disk_settings=dict(
                                type='dict',
                                disposition='diff_disk_settings',
                                options=dict(
                                    option=dict(
                                        type='str',
                                        disposition='option',
                                        choices=['Local']
                                    ),
                                    placement=dict(
                                        type='str',
                                        disposition='placement',
                                        choices=['CacheDisk',
                                                 'ResourceDisk']
                                    )
                                )
                            ),
                            create_option=dict(
                                type='str',
                                disposition='create_option',
                                choices=['FromImage',
                                         'Empty',
                                         'Attach'],
                                required=True
                            ),
                            disk_size_gb=dict(
                                type='int',
                                disposition='disk_size_gb'
                            ),
                            managed_disk=dict(
                                type='dict',
                                disposition='managed_disk',
                                options=dict(
                                    storage_account_type=dict(
                                        type='str',
                                        disposition='storage_account_type',
                                        choices=['Standard_LRS',
                                                 'Premium_LRS',
                                                 'StandardSSD_LRS',
                                                 'UltraSSD_LRS']
                                    ),
                                    disk_encryption_set=dict(
                                        type='dict',
                                        disposition='disk_encryption_set',
                                        options=dict(
                                            id=dict(
                                                type='str',
                                                disposition='id'
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    ),
                    data_disks=dict(
                        type='list',
                        disposition='data_disks',
                        elements='dict',
                        options=dict(
                            lun=dict(
                                type='int',
                                disposition='lun',
                                required=True
                            ),
                            name=dict(
                                type='str',
                                disposition='name'
                            ),
                            vhd=dict(
                                type='dict',
                                disposition='vhd',
                                options=dict(
                                    uri=dict(
                                        type='str',
                                        disposition='uri'
                                    )
                                )
                            ),
                            image=dict(
                                type='dict',
                                disposition='image',
                                options=dict(
                                    uri=dict(
                                        type='str',
                                        disposition='uri'
                                    )
                                )
                            ),
                            caching=dict(
                                type='sealed-choice',
                                disposition='caching'
                            ),
                            write_accelerator_enabled=dict(
                                type='bool',
                                disposition='write_accelerator_enabled'
                            ),
                            create_option=dict(
                                type='str',
                                disposition='create_option',
                                choices=['FromImage',
                                         'Empty',
                                         'Attach'],
                                required=True
                            ),
                            disk_size_gb=dict(
                                type='int',
                                disposition='disk_size_gb'
                            ),
                            managed_disk=dict(
                                type='dict',
                                disposition='managed_disk',
                                options=dict(
                                    storage_account_type=dict(
                                        type='str',
                                        disposition='storage_account_type',
                                        choices=['Standard_LRS',
                                                 'Premium_LRS',
                                                 'StandardSSD_LRS',
                                                 'UltraSSD_LRS']
                                    ),
                                    disk_encryption_set=dict(
                                        type='dict',
                                        disposition='disk_encryption_set',
                                        options=dict(
                                            id=dict(
                                                type='str',
                                                disposition='id'
                                            )
                                        )
                                    )
                                )
                            ),
                            to_be_detached=dict(
                                type='bool',
                                disposition='to_be_detached'
                            )
                        )
                    )
                )
            ),
            additional_capabilities=dict(
                type='dict',
                disposition='/additional_capabilities',
                options=dict(
                    ultra_ssd_enabled=dict(
                        type='bool',
                        disposition='ultra_ssd_enabled'
                    )
                )
            ),
            os_profile=dict(
                type='dict',
                disposition='/os_profile',
                options=dict(
                    computer_name=dict(
                        type='str',
                        disposition='computer_name'
                    ),
                    admin_username=dict(
                        type='str',
                        disposition='admin_username'
                    ),
                    admin_password=dict(
                        type='str',
                        disposition='admin_password'
                    ),
                    custom_data=dict(
                        type='str',
                        disposition='custom_data'
                    ),
                    windows_configuration=dict(
                        type='dict',
                        disposition='windows_configuration',
                        options=dict(
                            provision_vm_agent=dict(
                                type='bool',
                                disposition='provision_vm_agent'
                            ),
                            enable_automatic_updates=dict(
                                type='bool',
                                disposition='enable_automatic_updates'
                            ),
                            time_zone=dict(
                                type='str',
                                disposition='time_zone'
                            ),
                            additional_unattend_content=dict(
                                type='list',
                                disposition='additional_unattend_content',
                                elements='dict',
                                options=dict(
                                    pass_name=dict(
                                        type='constant',
                                        disposition='pass_name'
                                    ),
                                    component_name=dict(
                                        type='constant',
                                        disposition='component_name'
                                    ),
                                    setting_name=dict(
                                        type='sealed-choice',
                                        disposition='setting_name'
                                    ),
                                    content=dict(
                                        type='str',
                                        disposition='content'
                                    )
                                )
                            ),
                            patch_settings=dict(
                                type='dict',
                                disposition='patch_settings',
                                options=dict(
                                    patch_mode=dict(
                                        type='str',
                                        disposition='patch_mode',
                                        choices=['Manual',
                                                 'AutomaticByOS',
                                                 'AutomaticByPlatform']
                                    )
                                )
                            ),
                            win_rm=dict(
                                type='dict',
                                disposition='win_rm',
                                options=dict(
                                    listeners=dict(
                                        type='list',
                                        disposition='listeners',
                                        elements='dict',
                                        options=dict(
                                            protocol=dict(
                                                type='sealed-choice',
                                                disposition='protocol'
                                            ),
                                            certificate_url=dict(
                                                type='str',
                                                disposition='certificate_url'
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    ),
                    linux_configuration=dict(
                        type='dict',
                        disposition='linux_configuration',
                        options=dict(
                            disable_password_authentication=dict(
                                type='bool',
                                disposition='disable_password_authentication'
                            ),
                            ssh=dict(
                                type='dict',
                                disposition='ssh',
                                options=dict(
                                    public_keys=dict(
                                        type='list',
                                        disposition='public_keys',
                                        elements='dict',
                                        options=dict(
                                            path=dict(
                                                type='str',
                                                disposition='path'
                                            ),
                                            key_data=dict(
                                                type='str',
                                                disposition='key_data'
                                            )
                                        )
                                    )
                                )
                            ),
                            provision_vm_agent=dict(
                                type='bool',
                                disposition='provision_vm_agent'
                            )
                        )
                    ),
                    secrets=dict(
                        type='list',
                        disposition='secrets',
                        elements='dict',
                        options=dict(
                            source_vault=dict(
                                type='dict',
                                disposition='source_vault',
                                options=dict(
                                    id=dict(
                                        type='str',
                                        disposition='id'
                                    )
                                )
                            ),
                            vault_certificates=dict(
                                type='list',
                                disposition='vault_certificates',
                                elements='dict',
                                options=dict(
                                    certificate_url=dict(
                                        type='str',
                                        disposition='certificate_url'
                                    ),
                                    certificate_store=dict(
                                        type='str',
                                        disposition='certificate_store'
                                    )
                                )
                            )
                        )
                    ),
                    allow_extension_operations=dict(
                        type='bool',
                        disposition='allow_extension_operations'
                    ),
                    require_guest_provision_signal=dict(
                        type='bool',
                        disposition='require_guest_provision_signal'
                    )
                )
            ),
            network_profile=dict(
                type='dict',
                disposition='/network_profile',
                options=dict(
                    network_interfaces=dict(
                        type='list',
                        disposition='network_interfaces',
                        elements='dict',
                        options=dict(
                            primary=dict(
                                type='bool',
                                disposition='primary'
                            )
                        )
                    )
                )
            ),
            security_profile=dict(
                type='dict',
                disposition='/security_profile',
                options=dict(
                    encryption_at_host=dict(
                        type='bool',
                        disposition='encryption_at_host'
                    )
                )
            ),
            diagnostics_profile=dict(
                type='dict',
                disposition='/diagnostics_profile',
                options=dict(
                    boot_diagnostics=dict(
                        type='dict',
                        disposition='boot_diagnostics',
                        options=dict(
                            enabled=dict(
                                type='bool',
                                disposition='enabled'
                            ),
                            storage_uri=dict(
                                type='str',
                                disposition='storage_uri'
                            )
                        )
                    )
                )
            ),
            availability_set=dict(
                type='dict',
                disposition='/availability_set',
                options=dict(
                    id=dict(
                        type='str',
                        disposition='id'
                    )
                )
            ),
            virtual_machine_scale_set=dict(
                type='dict',
                disposition='/virtual_machine_scale_set',
                options=dict(
                    id=dict(
                        type='str',
                        disposition='id'
                    )
                )
            ),
            proximity_placement_group=dict(
                type='dict',
                disposition='/proximity_placement_group',
                options=dict(
                    id=dict(
                        type='str',
                        disposition='id'
                    )
                )
            ),
            priority=dict(
                type='str',
                disposition='/priority',
                choices=['Regular',
                         'Low',
                         'Spot']
            ),
            eviction_policy=dict(
                type='str',
                disposition='/eviction_policy',
                choices=['Deallocate',
                         'Delete']
            ),
            billing_profile=dict(
                type='dict',
                disposition='/billing_profile',
                options=dict(
                    max_price=dict(
                        type='number',
                        disposition='max_price'
                    )
                )
            ),
            host=dict(
                type='dict',
                disposition='/host',
                options=dict(
                    id=dict(
                        type='str',
                        disposition='id'
                    )
                )
            ),
            host_group=dict(
                type='dict',
                disposition='/host_group',
                options=dict(
                    id=dict(
                        type='str',
                        disposition='id'
                    )
                )
            ),
            instance_view=dict(
                type='dict',
                updatable=False,
                disposition='/instance_view',
                options=dict(
                    platform_update_domain=dict(
                        type='int',
                        disposition='platform_update_domain'
                    ),
                    platform_fault_domain=dict(
                        type='int',
                        disposition='platform_fault_domain'
                    ),
                    computer_name=dict(
                        type='str',
                        disposition='computer_name'
                    ),
                    os_name=dict(
                        type='str',
                        disposition='os_name'
                    ),
                    os_version=dict(
                        type='str',
                        disposition='os_version'
                    ),
                    hyper_v_generation=dict(
                        type='str',
                        disposition='hyper_v_generation',
                        choices=['V1',
                                 'V2']
                    ),
                    rdp_thumb_print=dict(
                        type='str',
                        disposition='rdp_thumb_print'
                    ),
                    vm_agent=dict(
                        type='dict',
                        disposition='vm_agent',
                        options=dict(
                            vm_agent_version=dict(
                                type='str',
                                disposition='vm_agent_version'
                            ),
                            extension_handlers=dict(
                                type='list',
                                disposition='extension_handlers',
                                elements='dict',
                                options=dict(
                                    type=dict(
                                        type='str',
                                        disposition='type'
                                    ),
                                    type_handler_version=dict(
                                        type='str',
                                        disposition='type_handler_version'
                                    ),
                                    status=dict(
                                        type='dict',
                                        disposition='status',
                                        options=dict(
                                            code=dict(
                                                type='str',
                                                disposition='code'
                                            ),
                                            level=dict(
                                                type='sealed-choice',
                                                disposition='level'
                                            ),
                                            display_status=dict(
                                                type='str',
                                                disposition='display_status'
                                            ),
                                            message=dict(
                                                type='str',
                                                disposition='message'
                                            ),
                                            time=dict(
                                                type='str',
                                                disposition='time'
                                            )
                                        )
                                    )
                                )
                            ),
                            statuses=dict(
                                type='list',
                                disposition='statuses',
                                elements='dict',
                                options=dict(
                                    code=dict(
                                        type='str',
                                        disposition='code'
                                    ),
                                    level=dict(
                                        type='sealed-choice',
                                        disposition='level'
                                    ),
                                    display_status=dict(
                                        type='str',
                                        disposition='display_status'
                                    ),
                                    message=dict(
                                        type='str',
                                        disposition='message'
                                    ),
                                    time=dict(
                                        type='str',
                                        disposition='time'
                                    )
                                )
                            )
                        )
                    ),
                    maintenance_redeploy_status=dict(
                        type='dict',
                        disposition='maintenance_redeploy_status',
                        options=dict(
                            is_customer_initiated_maintenance_allowed=dict(
                                type='bool',
                                disposition='is_customer_initiated_maintenance_allowed'
                            ),
                            pre_maintenance_window_start_time=dict(
                                type='str',
                                disposition='pre_maintenance_window_start_time'
                            ),
                            pre_maintenance_window_end_time=dict(
                                type='str',
                                disposition='pre_maintenance_window_end_time'
                            ),
                            maintenance_window_start_time=dict(
                                type='str',
                                disposition='maintenance_window_start_time'
                            ),
                            maintenance_window_end_time=dict(
                                type='str',
                                disposition='maintenance_window_end_time'
                            ),
                            last_operation_result_code=dict(
                                type='sealed-choice',
                                disposition='last_operation_result_code'
                            ),
                            last_operation_message=dict(
                                type='str',
                                disposition='last_operation_message'
                            )
                        )
                    ),
                    disks=dict(
                        type='list',
                        disposition='disks',
                        elements='dict',
                        options=dict(
                            name=dict(
                                type='str',
                                disposition='name'
                            ),
                            encryption_settings=dict(
                                type='list',
                                disposition='encryption_settings',
                                elements='dict',
                                options=dict(
                                    disk_encryption_key=dict(
                                        type='dict',
                                        disposition='disk_encryption_key',
                                        options=dict(
                                            secret_url=dict(
                                                type='str',
                                                disposition='secret_url',
                                                required=True
                                            ),
                                            source_vault=dict(
                                                type='dict',
                                                disposition='source_vault',
                                                required=True,
                                                options=dict(
                                                    id=dict(
                                                        type='str',
                                                        disposition='id'
                                                    )
                                                )
                                            )
                                        )
                                    ),
                                    key_encryption_key=dict(
                                        type='dict',
                                        disposition='key_encryption_key',
                                        options=dict(
                                            key_url=dict(
                                                type='str',
                                                disposition='key_url',
                                                required=True
                                            ),
                                            source_vault=dict(
                                                type='dict',
                                                disposition='source_vault',
                                                required=True,
                                                options=dict(
                                                    id=dict(
                                                        type='str',
                                                        disposition='id'
                                                    )
                                                )
                                            )
                                        )
                                    ),
                                    enabled=dict(
                                        type='bool',
                                        disposition='enabled'
                                    )
                                )
                            ),
                            statuses=dict(
                                type='list',
                                disposition='statuses',
                                elements='dict',
                                options=dict(
                                    code=dict(
                                        type='str',
                                        disposition='code'
                                    ),
                                    level=dict(
                                        type='sealed-choice',
                                        disposition='level'
                                    ),
                                    display_status=dict(
                                        type='str',
                                        disposition='display_status'
                                    ),
                                    message=dict(
                                        type='str',
                                        disposition='message'
                                    ),
                                    time=dict(
                                        type='str',
                                        disposition='time'
                                    )
                                )
                            )
                        )
                    ),
                    extensions=dict(
                        type='list',
                        disposition='extensions',
                        elements='dict',
                        options=dict(
                            name=dict(
                                type='str',
                                disposition='name'
                            ),
                            type=dict(
                                type='str',
                                disposition='type'
                            ),
                            type_handler_version=dict(
                                type='str',
                                disposition='type_handler_version'
                            ),
                            substatuses=dict(
                                type='list',
                                disposition='substatuses',
                                elements='dict',
                                options=dict(
                                    code=dict(
                                        type='str',
                                        disposition='code'
                                    ),
                                    level=dict(
                                        type='sealed-choice',
                                        disposition='level'
                                    ),
                                    display_status=dict(
                                        type='str',
                                        disposition='display_status'
                                    ),
                                    message=dict(
                                        type='str',
                                        disposition='message'
                                    ),
                                    time=dict(
                                        type='str',
                                        disposition='time'
                                    )
                                )
                            ),
                            statuses=dict(
                                type='list',
                                disposition='statuses',
                                elements='dict',
                                options=dict(
                                    code=dict(
                                        type='str',
                                        disposition='code'
                                    ),
                                    level=dict(
                                        type='sealed-choice',
                                        disposition='level'
                                    ),
                                    display_status=dict(
                                        type='str',
                                        disposition='display_status'
                                    ),
                                    message=dict(
                                        type='str',
                                        disposition='message'
                                    ),
                                    time=dict(
                                        type='str',
                                        disposition='time'
                                    )
                                )
                            )
                        )
                    ),
                    vm_health=dict(
                        type='dict',
                        updatable=False,
                        disposition='vm_health',
                        options=dict(
                            status=dict(
                                type='dict',
                                updatable=False,
                                disposition='status',
                                options=dict(
                                    code=dict(
                                        type='str',
                                        disposition='code'
                                    ),
                                    level=dict(
                                        type='sealed-choice',
                                        disposition='level'
                                    ),
                                    display_status=dict(
                                        type='str',
                                        disposition='display_status'
                                    ),
                                    message=dict(
                                        type='str',
                                        disposition='message'
                                    ),
                                    time=dict(
                                        type='str',
                                        disposition='time'
                                    )
                                )
                            )
                        )
                    ),
                    boot_diagnostics=dict(
                        type='dict',
                        disposition='boot_diagnostics',
                        options=dict(
                            status=dict(
                                type='dict',
                                updatable=False,
                                disposition='status',
                                options=dict(
                                    code=dict(
                                        type='str',
                                        disposition='code'
                                    ),
                                    level=dict(
                                        type='sealed-choice',
                                        disposition='level'
                                    ),
                                    display_status=dict(
                                        type='str',
                                        disposition='display_status'
                                    ),
                                    message=dict(
                                        type='str',
                                        disposition='message'
                                    ),
                                    time=dict(
                                        type='str',
                                        disposition='time'
                                    )
                                )
                            )
                        )
                    ),
                    statuses=dict(
                        type='list',
                        disposition='statuses',
                        elements='dict',
                        options=dict(
                            code=dict(
                                type='str',
                                disposition='code'
                            ),
                            level=dict(
                                type='sealed-choice',
                                disposition='level'
                            ),
                            display_status=dict(
                                type='str',
                                disposition='display_status'
                            ),
                            message=dict(
                                type='str',
                                disposition='message'
                            ),
                            time=dict(
                                type='str',
                                disposition='time'
                            )
                        )
                    ),
                    patch_status=dict(
                        type='dict',
                        disposition='patch_status',
                        options=dict(
                            available_patch_summary=dict(
                                type='dict',
                                disposition='available_patch_summary',
                                options=dict(
                                    error=dict(
                                        type='dict',
                                        updatable=False,
                                        disposition='error',
                                        options=dict(
                                            details=dict(
                                                type='list',
                                                disposition='details',
                                                elements='dict',
                                                options=dict(
                                                    code=dict(
                                                        type='str',
                                                        disposition='code'
                                                    ),
                                                    target=dict(
                                                        type='str',
                                                        disposition='target'
                                                    ),
                                                    message=dict(
                                                        type='str',
                                                        disposition='message'
                                                    )
                                                )
                                            ),
                                            innererror=dict(
                                                type='dict',
                                                disposition='innererror',
                                                options=dict(
                                                    exceptiontype=dict(
                                                        type='str',
                                                        disposition='exceptiontype'
                                                    ),
                                                    errordetail=dict(
                                                        type='str',
                                                        disposition='errordetail'
                                                    )
                                                )
                                            ),
                                            code=dict(
                                                type='str',
                                                disposition='code'
                                            ),
                                            target=dict(
                                                type='str',
                                                disposition='target'
                                            ),
                                            message=dict(
                                                type='str',
                                                disposition='message'
                                            )
                                        )
                                    )
                                )
                            ),
                            last_patch_installation_summary=dict(
                                type='dict',
                                disposition='last_patch_installation_summary',
                                options=dict(
                                    error=dict(
                                        type='dict',
                                        updatable=False,
                                        disposition='error',
                                        options=dict(
                                            details=dict(
                                                type='list',
                                                disposition='details',
                                                elements='dict',
                                                options=dict(
                                                    code=dict(
                                                        type='str',
                                                        disposition='code'
                                                    ),
                                                    target=dict(
                                                        type='str',
                                                        disposition='target'
                                                    ),
                                                    message=dict(
                                                        type='str',
                                                        disposition='message'
                                                    )
                                                )
                                            ),
                                            innererror=dict(
                                                type='dict',
                                                disposition='innererror',
                                                options=dict(
                                                    exceptiontype=dict(
                                                        type='str',
                                                        disposition='exceptiontype'
                                                    ),
                                                    errordetail=dict(
                                                        type='str',
                                                        disposition='errordetail'
                                                    )
                                                )
                                            ),
                                            code=dict(
                                                type='str',
                                                disposition='code'
                                            ),
                                            target=dict(
                                                type='str',
                                                disposition='target'
                                            ),
                                            message=dict(
                                                type='str',
                                                disposition='message'
                                            )
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            ),
            license_type=dict(
                type='str',
                disposition='/license_type'
            ),
            extensions_time_budget=dict(
                type='str',
                disposition='/extensions_time_budget'
            ),
            force_deletion=dict(
                type='bool'
            ),
            expand=dict(
                type='constant'
            ),
            state=dict(
                type='str',
                default='present',
                choices=['present', 'absent']
            )
        )

        self.resource_group = None
        self.vm_name = None
        self.force_deletion = None
        self.expand = None
        self.body = {}

        self.results = dict(changed=False)
        self.mgmt_client = None
        self.state = None
        self.to_do = Actions.NoAction

        super(AzureRMVirtualMachine, self).__init__(derived_arg_spec=self.module_arg_spec,
                                                    supports_check_mode=True,
                                                    supports_tags=True)

    def exec_module(self, **kwargs):
        for key in list(self.module_arg_spec.keys()):
            if hasattr(self, key):
                setattr(self, key, kwargs[key])
            elif kwargs[key] is not None:
                self.body[key] = kwargs[key]

        self.inflate_parameters(self.module_arg_spec, self.body, 0)

        old_response = None
        response = None

        self.mgmt_client = self.get_mgmt_svc_client(ComputeManagementClient,
                                                    base_url=self._cloud_environment.endpoints.resource_manager,
                                                    api_version='2020-06-01')

        old_response = self.get_resource()

        if not old_response:
            if self.state == 'present':
                self.to_do = Actions.Create
        else:
            if self.state == 'absent':
                self.to_do = Actions.Delete
            else:
                modifiers = {}
                self.create_compare_modifiers(self.module_arg_spec, '', modifiers)
                self.results['modifiers'] = modifiers
                self.results['compare'] = []
                if not self.default_compare(modifiers, self.body, old_response, '', self.results):
                    self.to_do = Actions.Update

        if (self.to_do == Actions.Create) or (self.to_do == Actions.Update):
            self.results['changed'] = True
            if self.check_mode:
                return self.results
            response = self.create_update_resource()
        elif self.to_do == Actions.Delete:
            self.results['changed'] = True
            if self.check_mode:
                return self.results
            self.delete_resource()
        else:
            self.results['changed'] = False
            response = old_response
            self.result['state'] = response

        return self.results

    def create_update_resource(self):
        try:
            response = self.mgmt_client.virtual_machines.create_or_update(resource_group=self.resource_group,
                                                                          vm_name=self.vm_name,
                                                                          parameters=self.body)
            if isinstance(response, AzureOperationPoller) or isinstance(response, LROPoller):
                response = self.get_poller_result(response)
        except CloudError as exc:
            self.log('Error attempting to create the VirtualMachine instance.')
            self.fail('Error creating the VirtualMachine instance: {0}'.format(str(exc)))
        return response.as_dict()

    def delete_resource(self):
        try:
            response = self.mgmt_client.virtual_machines.delete(resource_group=self.resource_group,
                                                                vm_name=self.vm_name,
                                                                force_deletion=self.force_deletion)
        except CloudError as e:
            self.log('Error attempting to delete the VirtualMachine instance.')
            self.fail('Error deleting the VirtualMachine instance: {0}'.format(str(e)))

        return True

    def get_resource(self):
        try:
            response = self.mgmt_client.virtual_machines.get(resource_group=self.resource_group,
                                                             vm_name=self.vm_name,
                                                             expand=self.expand)
        except CloudError as e:
            return False
        return response.as_dict()


def main():
    AzureRMVirtualMachine()


if __name__ == '__main__':
    main()
